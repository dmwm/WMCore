#!/usr/bin/env python
"""
wmagent-couchapp-init

"""

import os
import tempfile
import sys

from couchapp.commands import push as couchapppush
from couchapp.config import Config

from WMCore.Configuration import loadConfigurationFile
from WMCore.Database.CMSCouch import CouchServer
from WMCore.WMInit import getWMBASE

def installCouchApp(couchUrl, couchDBName, couchAppName):
    """
    _installCouchApp_

    Install the given couch app on the given server in the given database.  If
    the database already exists it will be deleted.
    """
    print "Installing %s into %s" % (couchAppName, couchDBName)

    couchServer = CouchServer(couchUrl)
    couchappConfig = Config()

    if couchDBName in couchServer.listDatabases():
        couchServer.deleteDatabase(couchDBName)
    couchServer.createDatabase(couchDBName)

    wmBase = getWMBASE()
    develPath = "%s/src/couchapps" % wmBase
    if not os.path.exists(develPath):
        basePath = "%s/src/couchapps" % os.environ['WMCORE_ROOT']
    else:
        basePath = develPath
    couchapppush(couchappConfig, "%s/%s" % (basePath, couchAppName),
                 "%s/%s" % (couchUrl, couchDBName))
    return
    
  

def setupCron(couchUrl, couchDBName):
    """
    _setupCron_

    Setup cron jobs to index and compact the JobDump.
    """
    print "Setting up cron jobs for the job dump."
    index = 'curl -s -m 1 %s/%s/_design/JobDump/_view/jobsByJobID?limit=1 > /dev/null' % (couchUrl, couchDBName)
    compact = 'curl -s -H "Content-Type: application/json" -X POST %s/%s/_compact > /dev/null' % (couchUrl, couchDBName)

    tempDir = tempfile.mkdtemp()
    os.system("crontab -l > %s/crontab" % tempDir)
    os.system("grep -v '%s' %s/crontab > %s/crontab2" % (index, tempDir, tempDir))
    os.system("grep -v '%s' %s/crontab2 > %s/crontab" % (compact, tempDir, tempDir))

    cronTab = open("%s/crontab" % tempDir, "w+")
    cronTab.write("* * * * * %s\n" % index)
    cronTab.write("0 0 * * * %s\n" % compact)
    cronTab.close()

    os.system("crontab %s/crontab" % tempDir)
    os.remove("%s/crontab" % tempDir)
    os.remove("%s/crontab2" % tempDir)    
    os.rmdir(tempDir)
    return

if __name__ == "__main__":
    if not os.environ.has_key("WMAGENT_CONFIG"):
        print "The WMAGENT_CONFIG environment variable needs to be set before"
        print "this can run."
        sys.exit(1)

    wmagentConfig = loadConfigurationFile(os.environ["WMAGENT_CONFIG"])
    
    installCouchApp(wmagentConfig.JobStateMachine.couchurl,
                    wmagentConfig.JobStateMachine.couchDBName, "JobDump")

    installCouchApp(wmagentConfig.JobStateMachine.couchurl,
                    wmagentConfig.JobStateMachine.configCacheDBName, "ConfigCache")
    installCouchApp(wmagentConfig.JobStateMachine.couchurl,
                    wmagentConfig.JobStateMachine.configCacheDBName, "GroupUser")

    installCouchApp(wmagentConfig.ACDC.couchurl, wmagentConfig.ACDC.database, "ACDC")
    installCouchApp(wmagentConfig.ACDC.couchurl, wmagentConfig.ACDC.database, "GroupUser")    

    setupCron(wmagentConfig.JobStateMachine.couchurl,
              wmagentConfig.JobStateMachine.couchDBName)

    sys.exit(0)
